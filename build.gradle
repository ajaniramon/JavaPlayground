buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Dalston.SR3'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.retry:spring-retry')
	compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '3.0.8.RELEASE'
	compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.2.2'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.8.RELEASE'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test')


	// guava
	compile group: 'com.google.guava', name: 'guava', version: '23.3-jre'

	// https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.58'

	// https://mvnrepository.com/artifact/org.bouncycastle/bcpg-jdk15on
	compile group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: '1.58'

	// https://mvnrepository.com/artifact/org.bouncycastle/bcmail-jdk15on
	compile group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: '1.58'


}


task('dockerize', type: Copy) {
	def version = project.version.toString()

	from('src/main/resources/docker-compose.yml')
	into('docker')

	from('src/main/resources/Playground_Dockerfile')
	into('docker')


	copy {
		from 'build/libs/Playground-'+version+ '.jar'
		into "docker"
	}

	file("docker/Playground-"+version+".jar").renameTo(file("docker/playground.jar"))

	from('src/main/resources/init_docker.bat')
	into('docker')

}

dockerize{
	dependsOn build
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
